(()=>{"use strict";class e{static _instance=void 0;static _default={quizType:"",volume:50,timeGame:!0,secondToAnswer:40,categoryQty:12,questionsInCategory:10,rightAnswerToWin:6};static _categories={artist:["Apprentice","Master","Secret Master","Perfect Master","Intimate Secretary","Provost","Intendant","Sublime Master","Grand Master","Knight","Pontiff","Prince"],pictures:["Apprentice","Master","Secret Master","Perfect Master","Intimate Secretary","Provost","Intendant","Sublime Master","Grand Master","Knight","Pontiff","Prince"]};constructor(){if(e._instance)return e._instance;if(e._instance=this,localStorage.getItem("settings"))try{const e=JSON.parse(localStorage.getItem("settings"));if(!this.validFormat(e))throw new Error("Saves not valid");this.settingsFromObject(e)}catch(e){console.log("Can't restore saves because:",e.message),this.setDefaultSettings(),this.getImagesFromJson()}else this.setDefaultSettings(),this.getImagesFromJson();this.getSettings(),window.addEventListener("beforeunload",(()=>localStorage.setItem("settings",this.getSettings())))}validFormat(e){return void 0!==e.volume&void 0!==e.secondToAnswer&void 0!==e.categoryQty&void 0!==e.questionsInCategory&void 0!==e.rightAnswerToWin&void 0!==e.categories}getSettings(){let e=Object.assign({},this);return JSON.stringify(e)}settingsFromObject(e){Object.assign(this,e)}setDefaultSettings(){this.settingsFromObject(e._default)}async getImagesFromJson(){try{let e=await fetch("./js/Images.json");const t=await e.json();this.setCategories(t)}catch(e){console.log("Can't read data",e.message)}}setCategories(t){this.categories=e._categories;for(let e in this.categories)this.categories[e]=this.categories[e].map(((n,s)=>({name:n,id:this.convertToId(n),isPlayed:!1,answeredQty:void 0,totalQuestions:this.questionsInCategory,imgData:this.getImgData(s,e,t)})))}convertToId(e){return e.replace(" ","_").toLowerCase()}getImgData(e,t,n){const s="pictures"==t?120+e*this.questionsInCategory:e*this.questionsInCategory;return n.slice(s,s+this.questionsInCategory)}changeSettings(){if(document.querySelector("#settings-page")){let e=document.querySelector("#settings-page");const t=e.querySelector("#volume-range"),n=e=>{this.volume=e,t.value=e,t.style.background=`linear-gradient(to right, #FFBCA2 0%, #FFBCA2 ${e}%, #e5e5e5 ${e}%, #e5e5e5 100%)`};n(this.volume),t.addEventListener("input",(e=>n(e.target.value)));const s=e.querySelector("#time-game"),i=e.querySelector("#container-time-to-answer"),o=e.querySelector("#time-to-answer"),a=e.querySelector(".settings__time-text");this.timeGame?(a.textContent="ON",s.classList.add("switch-on"),i.classList.remove("hidden")):(a.textContent="OFF",s.classList.remove("switch-on"),i.classList.add("hidden")),s.addEventListener("click",(e=>{e.target.classList.toggle("switch-on"),i.classList.toggle("hidden"),this.timeGame=!this.timeGame,"ON"==a.textContent?a.textContent="OFF":a.textContent="ON"})),o.value=this.secondToAnswer,i.addEventListener("click",(e=>{this.secondToAnswer=o.value}));const r=e.querySelector("#default-btn"),c=()=>{this.setDefaultSettings(),e.remove(),document.location.replace(`#/modal/settings&${Math.random()}`)};r.addEventListener("click",(()=>c()))}else console.log("try"),setTimeout((()=>this.changeSettings()),100)}}class t{static _instance=void 0;constructor(n){if(this.settings=new e,!n)return t._instance;t._instance=this,this.id=n;let s=this.settings.categories[this.settings.quizType].find((e=>e.id===n));this.type=this.settings.quizType,this.categoryName=s.name,this.amount=this.settings.questionsInCategory,this.data=s.imgData,this.answeredRight=0,this.numberOfQuestion=0,this.isLastQuestion=!1}nextQuestion(){return this.rightAnswer=this.data[this.numberOfQuestion],this.descriptions=this.getRandomDescriptions(this.rightAnswer),this.numberOfQuestion++,this.numberOfQuestion>=this.amount?this.isLastQuestion=!0:this.isLastQuestion=!1,this.descriptions}getRandomDescriptions(e){let t=[e];for(;t.length<4;){let e=Math.floor(Math.random()*this.amount),n=this.data[e];t.find((e=>e.author==n.author))||t.push(n)}for(let e=0;e<t.length;e++){let n=Math.round(Math.random()*(t.length-1)),s=t[e];t[e]=t[n],t[n]=s}return t}finishThisQuiz(){this.settings.categories[this.settings.quizType].forEach((e=>{e.id===this.id&&(e.isPlayed=!0,e.answeredQty=this.answeredRight)})),t._instance=void 0}getNextId(){let t=new e,n=this.id,s=t.categories[t.quizType].findIndex((e=>e.id===n));return s+1==t.categories[t.quizType].length?t.categories[t.quizType][0].id:t.categories[t.quizType][s+1].id}checkRightAnswer(e){let t=!1;return this.rightAnswer.isGuested=!1,e===this.rightAnswer.imageNum&&(this.rightAnswer.isGuested=!0,t=!0,this.answeredRight++),t}checkSuccess(){return this.answeredRight>=this.settings.rightAnswerToWin}}class n{constructor(){this.sounds={badResult:"./assets/sounds/bad-result.mp3",goodResult:"./assets/sounds/good-result.mp3",openPage:"./assets/sounds/open-page-sound.mp3",falseAnswer:"./assets/sounds/wrongAnswer.mp3",rightAnswer:"./assets/sounds/right-answer-sound.mp3",timesUp:"./assets/sounds/timesUP-sound.mp3",clickButton:"./assets/sounds/button-sound.mp3"},this.player=new Audio,this.settings=new e}sound(e){try{this.player.volume=this.settings.volume/100||0,this.player.pause(),this.player.currentTime=0,this.player.src=this.sounds[e],this.player.addEventListener("canplaythrough",(()=>this.player.play()),{once:!0})}catch(e){console.log("Audio can not play",e.message)}}}const s={render:()=>'\n    \n    <header class="header">\n      <a href="#/modal/settings">\n        <span class="settings-icon_icon settings-icon_top-right"></span>\n      </a>\n    </header>\n    \n    <div class="home-page" id="home-page"\n      <div class="home-page__menu" id="home-page-menu">\n        <div class="logo"></div>\n        <div  class="home-page__buttons">\n          <button onclick="location.href = \'#/category&artist\'" class="button" id="artist-quiz-btn">Artist quiz</button>\n          <button onclick="location.href = \'#/category&pictures\'" class="button" id="picture-quiz-btn">Pictures quiz</button>\n        </div>\n      </div>\n    </div>\n    \n    <footer class="footer">\n      <div class="rss-logo"></div>\n      <div class="developer">App developer: Aleksander Seryapin</div>\n      <div class="developed-year">2021</div>\n    </footer>\n    \n    '};class i{static _instance=void 0;constructor(){if(i._instance)return i._instance;i._instance=this;let t=new e,n=t.timeGame,s=t.secondToAnswer;n&&this.startTimer(s,s)}startTimer(e,t){if(0==e)return document.location.assign("#/modal/result-quiz");document.location.assign(`#/category/quiz/header-timer&${e}&${t}`),this.timerID=setTimeout((()=>this.startTimer(e-1,t)),1e3)}removeTimer(){clearTimeout(this.timerID),document.location.assign("#/category/quiz/header-timer&9&0"),i._instance=void 0}}const o=()=>`\n    <div class="menu">\n      <a href="#/">\n        <h4 class="menu__icon icon_home" id="home-link">Home</h4>\n      </a>\n      <a href="#/category&${(new e).quizType}">\n      <h4 class="menu__icon icon_categories" id="categories-link">Categories</h4>\n      </a>\n      <a href="#/score">\n      <h4 class="menu__icon icon_score" id="score-link">Score</h4>\n      </a>\n    </div>\n    `,a={render:t=>{(new n).sound("openPage"),(new i).removeTimer();const s=new e;return s.quizType=t,`\n    \n    <header class="header">\n      <a href="#/modal/settings">\n        <span class="settings-icon_icon settings-icon_top-right"></span>\n      </a>\n    </header>\n    \n    <div class="categories show-page" id="categories-page">\n    <div class="logo logo_marked"></div>\n    <div class="categories__title"><h2>Categories</h2></div>\n    <div class="cards-wrapper" id="cards-wrapper">\n    ${s.categories[t].reduce(((e,t)=>e+r.render(t)),"")}\n    </div>\n    ${o()}\n    `}},r={render:({name:e,id:t,isPlayed:n,answeredQty:s,totalQuestions:i,imgData:o})=>`\n    <div class="card played__${n}" id="${t}">\n      <span class="card_name"> <h4>${e}</h4></span>\n      <span class="card_solved-qty visible__${n}"><h4>${s}/${i}</h4></span>\n      <a href="#/category/quiz&${t}">\n        <img class="card_img" src="./base-img/square/${o[0].imageNum}.jpg" alt="picture">\n      </a>\n    </div>\n    `},c={render:e=>{(new n).sound("openPage");const s=new t(e),o=s.nextQuestion();return new i,"pictures"===s.type?u.render(o,s.rightAnswer,e):d.render(o,s.rightAnswer,e)}},d={render:(e,t,n)=>{const s=e.reduce(((e,t)=>e+l.render(t.imageNum,n)),"");return`\n    <div class="quiz">\n    <a href="#/modal/confirm-exit&${n}"> \n      <div class="escape-cross escape-cross_top-left"></div>\n    </a>\n      <h3 class="quiz__question">Which is ${t.author} picture?</h3>\n      <div class="quiz__question-wrapper">\n      ${s}\n      </div>\n    </div>\n    \n    <footer class="footer">\n      <div class="rss-logo"></div>\n      <div class="developer">App developer: Aleksander Seryapin</div>\n      <div class="developed-year">2021</div>\n    </footer>\n    \n    `}},l={render:(e,t)=>`\n    <a href="#/modal/answer&${e}&${t}">\n        <img class="quiz__img-tile" src="./base-img/square/${e}.jpg" alt="choose-picture">\n    </a>\n    `},u={render:(e,t,n)=>{const s=e.reduce(((e,t)=>e+g.render(t,n)),"");return`\n    <div class="quiz">\n      <a href="#/modal/confirm-exit&${n}"> \n        <div class="escape-cross escape-cross_top-left"></div>\n      </a>\n      <h3 class="quiz__question">Who is thr author of the picture?</h3>\n      <img class="quiz__img-question" src="./base-img/square/${t.imageNum}.jpg" alt="picture">\n      <div class="quiz__question-wrapper">\n      ${s}\n      </div>\n    </div>\n    \n    <footer class="footer">\n      <div class="rss-logo"></div>\n      <div class="developer">App developer: Aleksander Seryapin</div>\n      <div class="developed-year">2021</div>\n    </footer>\n    \n    `}},g={render:(e,t)=>`\n        <button onclick="location.href = '#/modal/answer&${e.imageNum}&${t}'" class="button button_question">${e.author}</button>\n    `},m={render:()=>{(new i).removeTimer();let e=(new t).checkSuccess();return console.log("isSuccess",e),e?h.render():p.render()}},h={render:()=>{(new n).sound("goodResult");let e=new t,s=e.getNextId(),i=e.answeredRight,o=e.amount,a=e.type;return e.finishThisQuiz(),`\n    <div class="modal">\n      <div class="modal__dialog-wrapper">\n        <div class="trophy-cup-icon trophy-cup-icon_star modal__trophy-cup-icon"></div>\n        <h4 class="modal__congratulations">Congratulations!</h4>\n        <h1 class=""modal__answered-questions">${i}/${o}</h1>\n        <div class="modal__buttons">\n          <button onclick="location.href = '#/category&${a}'" class="button button_modal">Categories</button>\n          <button onclick="location.href = '#/category/quiz&${s}'" class="button button_colored button_modal">Next Quiz</button>\n        </div>\n      </div>\n    </div>\n    `}},p={render:()=>{(new n).sound("badResult");let e=new t,s=e.id,i=e.type;return e.finishThisQuiz(),`\n    <div class="modal">\n      <div class="modal__dialog-wrapper">\n        <div class="trophy-cup-icon trophy-cup-icon_break modal__trophy-cup-icon"></div>\n        <h1 class="modal__answered-questions">Game over!</h1>\n        <h4 class="modal__congratulations">Play again?</h4>\n        <div class="modal__buttons">\n          <button onclick="location.href = '#/category&${i}'" class="button button_modal">Cancel</button>\n          <button onclick="location.href = '#/category/quiz&${s}'" class="button button_colored button_modal">Yes</button>\n        </div>\n      </div>\n    </div>\n    `}},_={render:t=>{(new n).sound("openPage"),null==t&&(t=0);const s=new e,i=s.categories[s.quizType][t],a=s.categories[s.quizType][+t+1]?+t+1:0,r=s.categories[s.quizType][+t-1]?+t-1:s.categories[s.quizType].length-1,c=v(i),d=i.imgData.reduce(((e,n)=>e+b.render(n,t)),"");return`\n    <div class="score">\n    <div class="score__title">Score</div>\n    <div class="score__navigation">\n      <button onclick="location.href = '#/score&${r}'" class="button button__arrow button__arrow_left"><</button>\n      <h2 class="score__category-name"><span class="score__category-name_color" >${i.name}:</span> <br>${c} </h2>\n      <button onclick="location.href = '#/score&${a}'" class="button button__arrow button__arrow_right">></button>\n    </div>\n    <div class="cards-wrapper cards-wrapper_score show-page">\n    ${d} \n    </div>\n  </div>\n  ${o()}\n    `}},v=e=>{const t=e.imgData.reduce(((e,t)=>e+Number(t.isGuested)),0);return isNaN(t)?"not played":1===t?`${t} point`:`${t} points`},b={render:(e,t)=>{const n=void 0===e.isGuested?"#/modal/score-warning":`#/modal/learn-picture&${t}&${e.imageNum}`;return`\n      <div class="card played__${e.isGuested}">\n        <a href="${n}">\n          <img class="card_img" src="./base-img/square/${e.imageNum}.jpg" alt="picture">\n        </a>\n        <div class="check-icon check-icon_${e.isGuested} score__check"></div>\n      </div>\n    `}},y=[{path:"/",component:s},{path:"/modal/settings",component:{render:()=>((new e).changeSettings(),'\n    <div class="settings" id="settings-page"> \n    <h4 class="settings__header">Settings</h4>\n    <div class="settings__container ">\n      <h2 class="settings__title">Volume</h2>\n      <input class="volume__range" type="range" name="volume" id="volume-range">\n        <span class="volume__icon volume__icon_mute"></span>\n        <span class="volume__icon volume__icon_speaker"></span>\n    </div>\n    <div class="settings__container">\n      <h2 class="settings__title">Time game</h2>\n      <div class="settings__time">\n        <h2 class="settings__time-text">ON</h2>\n        <div class="switch-btn switch-on" id="time-game"></div>\n      </div>\n    </div>\n    <div class="settings__container" id="container-time-to-answer">\n      <h2 class="settings__title">Time to answer</h2>\n      <div class="settings__time">\n        <button class="button button_set-time button_colored" onclick="this.nextElementSibling.stepDown()"></button>\n        <input class="settings__input"   type="number" name="" id="time-to-answer" value="40" min="2" max="99" readonly>\n        <button class="button button_set-time button_set-time_plus" onclick="this.previousElementSibling.stepUp()"></button>\n      </div>\n    </div>\n    <div class="settings__container settings__container_buttons">\n      <button class="button button_question" id="default-btn">Default</button>\n      <button onclick="location.href = \'#/\'" class="button button_question button_colored">Home</button>\n    </div>\n  </div>\n  \n    <footer class="footer">\n      <div class="rss-logo"></div>\n      <div class="developer">App developer: Aleksander Seryapin</div>\n      <div class="developed-year">2021</div>\n    </footer>\n    \n  <iframe style="display:none" id="frame" onload="" src=""></iframe>\n    ')}},{path:"/category",component:a},{path:"/category/quiz",component:c},{path:"/category/quiz/header-timer",component:{render:(e,t)=>{const n=e/t*100;return"0"==t?"":`\n  <div class="timer">\n    <input class="timer__range" type="range" name="time" value="${e}" style="background: linear-gradient(\n      to right,\n      #ffbca2 0%,\n      #ffbca2 ${n}%,\n      #a4a4a4 ${n}%,\n      #a4a4a4 100%\n    );">\n    <div class="timer__seconds">${e}</div>\n  </div>\n  `}}},{path:"/modal/answer",component:{render:e=>{const s=new t,i=s.rightAnswer,o=s.checkRightAnswer(e),a=new n;o?a.sound("rightAnswer"):a.sound("falseAnswer");const r=s.isLastQuestion?"#/modal/result-quiz":"#/category/quiz";return`\n    <div class="modal">\n      <div class="modal__dialog-wrapper">\n        <img class="modal__img" src="./base-img/square/${i.imageNum}.jpg" alt="right-picture" >\n        <div class="check-icon check-icon_${o} modal__check"></div>\n        <h4 class="modal__picture-name">${i.name}</h4>\n        <h5 class="modal__author">${i.author}, ${i.year}</h5>\n          <button onclick="location.href = '${r}'" class="button button_colored button_modal" id="next-btn">Next</button>\n      </div>\n    </div>\n    `}}},{path:"/modal/result-quiz",component:m},{path:"/modal/confirm-exit",component:{render:e=>`\n    <div class="modal">\n      <div class="modal__dialog-wrapper">\n        <h4 class="modal__text">Do you want to quite the game?</h4>\n        <div class="modal__buttons">\n          <button onclick="location.href = '#/modal/cancel&${e}'" class="button button_modal">Cancel</button>\n          <button onclick="location.href = '#/category&${(new t).type}'" class="button button_colored button_modal">Quit</button>\n        </div>\n      </div>\n    </div>\n    `}},{path:"/modal/learn-picture",component:{render:(t,s)=>{(new n).sound("openPage");const i=new e,o=i.categories[i.quizType][t],a=o.imgData.find((e=>e.imageNum==s)),r=o.imgData.find((e=>e.imageNum==+s+1))?+s+1:+o.imgData[0].imageNum;return`\n    <div class="modal">\n      <div class="modal__dialog-wrapper modal__dialog-wrapper_wide">\n        <img class="modal__img" src="./base-img/full/${a.imageNum}full.jpg" alt="picture" >\n        <h4 class="modal__picture-name">${a.name}</h4>\n        <h4 class="modal__author">${a.author}, ${a.year}</h4>\n        <div class="modal__buttons">\n          <button onclick="location.href = '#/modal/cancel'" class="button button_modal">Cancel</button>\n          <button onclick="location.href = '#/modal/learn-picture&${t}&${r}'" class="button button_colored button_modal">Next picture</button>\n        </div>\n      </div>\n    </div>\n    `}}},{path:"/modal/cancel",component:{render:()=>{}}},{path:"/modal/score-warning",component:{render:()=>'\n    <div class="modal">\n      <div class="modal__dialog-wrapper">\n        <h2 class="modal__text">You should play this category first?</h2>\n        <button onclick="location.href = \'#/modal/cancel\'" class="button button_question button_colored">Cancel</button>\n      </div>\n    </div>\n    '}},{path:"/score",component:_}];new class{constructor(){document.location.assign("#/"),this.loadingGif=document.querySelector("#loading"),this.settings=new e,this.preLoadedCategoryImg(),window.addEventListener("load",(()=>{this.router(),this.loadingGif.style.display="none"})),window.addEventListener("hashchange",(()=>this.router()))}preLoadedCategoryImg(){for(let e in this.settings.categories)this.settings.categories[e].forEach((e=>{new Image(320,320).src=`./base-img/square/${e.imgData[0].imageNum}.jpg`}))}router(){const e=document.getElementById("main-page"),t=document.getElementById("cover-page"),n=document.getElementById("header-page"),s=document.getElementById("temp-page"),[i,...o]=function(){let e=location.hash.slice(1).toLowerCase()||"/";return e.includes("&")?e.split("&"):[e,null]}(),{component:a=ErrorComponent}=function(e,t){let n=new RegExp(`^\\${e}$`,"gm");return t.find((e=>e.path.match(n)))||void 0}(i,y)||{};i.includes("modal")?t.innerHTML=a.render(...o):i.includes("header")?n.innerHTML=a.render(...o):(t.innerHTML="",s.innerHTML=e.innerHTML,e.innerHTML=a.render(...o),e.addEventListener("animationend",(()=>{s.innerHTML=""}),{once:!0}))}}})();